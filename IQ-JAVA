1. What is the difference between JAR and RUNNABLE-JAR?
Ans:
  The runnable jar contains a MANIFEST.MF file, which defines the Main class to be executed when the jar is run.
  Non-runnable jars are just libraries of classes, that can be added to the classpath so that code is reused 
  (it also contains the manifest file, but no main class there)
  
2. What is the difference between Array and ArrayList?
Ans:
  http://javahungry.blogspot.com/2015/03/difference-between-array-and-arraylist-in-java-example.html
  8 differences are there. 
    1.Resizable
    2.Performance
    3.Primitives
    4.Iterator
    5.Type-Safety
    6.Length
    7.Adding elements
    8.Multi-dimensional
    
3. How to convert String to int in Java?
Ans:
  http://stackoverflow.com/questions/5585779/converting-string-to-int-in-java
  
    int foo = Integer.parseInt("1234");

4. Can we trust the order in ArrayList?
Ans: Yes, if you add normally one-by-one and one-after-one. ArrayList is a sequential list
  http://stackoverflow.com/questions/11331591/arraylist-insertion-and-retrieval-order

5. How many boolean compare operators are there in Java?
Ans: 5, 
      for AND &, &&
      for OR |, ||
      for XOR ^
      && and || are short-circuted, that means if first one is valid, it wont check the second parameter.
      
6. Frequent Gotcha, with object is?
Ans:  WHEN EQUATING OBJECTS, use a.equals(b) instead of a == b
  we compare the reference variables thinking that we are comparing values.
  Need to use equals method at any cost as that only will do what we intended.
  
7. Frequent Gotcha, with String is?
Ans: When doing string operations we assume it is normal object. But it is IMMUTABLE, that is, its methods cannot change its state.
  use a = a.concat("with something") instead of simply leaving a.concat("with something")
  Here alone, we will feel like we are not using object oriented way.

